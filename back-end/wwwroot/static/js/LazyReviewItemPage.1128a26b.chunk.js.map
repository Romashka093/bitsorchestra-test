{"version":3,"file":"static/js/LazyReviewItemPage.1128a26b.chunk.js","mappings":"2IAAO,IAAMA,EAAU,CACrB,CACEC,GAAI,IACJC,SAAU,gBACVC,KAAM,YACNC,QACE,mFACFC,OAAQ,EACRC,MAAO,kBACPC,MAAO,cACPC,iBAAiB,GAEnB,CACEP,GAAI,IACJC,SAAU,eACVC,KAAM,WACNC,QACE,mFACFC,OAAQ,EACRC,MAAO,mBACPC,MAAO,cACPC,iBAAiB,G,+ICoBrB,UAjCiC,WAC/B,IAAMP,GAAOQ,EAAAA,EAAAA,MAAPR,GACNS,GAA4CC,EAAAA,EAAAA,UAAqB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7DI,EAAcF,EAAA,GAAEG,EAAiBH,EAAA,GACxCI,GAA4BL,EAAAA,EAAAA,UAAqB,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7CE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAoCT,EAAAA,EAAAA,UAAqB,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArDE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,IAEhCG,EAAAA,EAAAA,YAAU,WACRT,EAAkBf,EAAAA,EACpB,GAAG,KAEHwB,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAWC,aAAaC,MAAK,SAAAC,GAAQ,OAAIT,EAAUS,EAASC,KAAK,GACnE,GAAG,KAEHL,EAAAA,EAAAA,YAAU,WACR,IAAMK,EAAOf,EAAegB,OAAOZ,GACnCK,EAAcM,EAChB,GAAG,CAACf,EAAgBI,IAEpB,IAAMa,EAAiBT,EAAWU,QAAO,SAAAC,GAAI,OAAIC,OAAOD,EAAKhC,MAAQA,CAAE,IAEvE,OACEkC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAAAC,UACRF,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAACC,UAAU,QAAOF,UAC1BF,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACC,GAAI,KAAMF,UAAU,eAAcF,SACpCN,IACe,OAAdA,QAAc,IAAdA,OAAc,EAAdA,EAAgBW,KAAI,SAAAT,GAAI,OAAIE,EAAAA,EAAAA,KAACQ,EAAAA,IAAMC,EAAAA,EAAAA,GAAA,GAAmBX,GAAbA,EAAKhC,GAAgB,UAK1E,C,qCCtCA,KAAe4C,EAAAA,EAAAA,GAAmB,a,sICG5BT,EAAyBU,EAAAA,YAAiB,SAAAC,EAO7CC,GAAQ,IANTC,EAAQF,EAARE,SAAQC,EAAAH,EACRI,MAAAA,OAAK,IAAAD,GAAQA,EAAAE,EAAAL,EAEbN,GAAIY,OAAS,IAAAD,EAAG,MAAKA,EACrBb,EAASQ,EAATR,UACGe,GAAKC,EAAAA,EAAAA,GAAAR,EAAAS,GAEFC,GAASC,EAAAA,EAAAA,IAAmBT,EAAU,aACtCU,EAA0B,kBAAVR,EAAqB,IAAHrB,OAAOqB,GAAU,SACzD,OAAoBhB,EAAAA,EAAAA,KAAKkB,GAAST,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAChCI,IAAKA,GACFM,GAAK,IACRf,UAAWqB,IAAWrB,EAAWY,EAAQ,GAAHrB,OAAM2B,GAAM3B,OAAG6B,GAAWF,KAEpE,IACArB,EAAUyB,YAAc,YACxB,K","sources":["mock-tool/reviews.ts","pages/ReviewItemPage/ReviewItemPage.tsx","../node_modules/react-bootstrap/esm/CardGroup.js","../node_modules/react-bootstrap/esm/Container.js"],"sourcesContent":["export const reviews = [\n  {\n    id: '1',\n    userName: 'Aadhya Colley',\n    date: '2021-9-12',\n    comment:\n      'Sed lectus. Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim.',\n    rating: 4,\n    email: 'test@domain.tld',\n    phone: '89898293234',\n    isSavedUsername: false,\n  },\n  {\n    id: '2',\n    userName: 'Jizya Aadhya',\n    date: '2018-8-3',\n    comment:\n      'Sed lectus. Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim.',\n    rating: 2,\n    email: 'test2@domain.ltd',\n    phone: '89898293234',\n    isSavedUsername: false,\n  },\n];\n","import { useState, useEffect } from 'react';\nimport { ReviewList } from '@helpers/index';\nimport { reviews } from 'mock-tool/reviews';\nimport { Container, CardGroup, Row } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport { Review } from '../../components/index';\nimport { reviewsApi } from 'api/api';\n\nconst ReviewItemPage: React.FC = () => {\n  let { id } = useParams();\n  const [defaultReviews, setDefaultReviews] = useState<ReviewList>([]);\n  const [reviws, setReviws] = useState<ReviewList>([]);\n  const [reviwsData, setReviwsData] = useState<ReviewList>([]);\n\n  useEffect(() => {\n    setDefaultReviews(reviews);\n  }, []);\n\n  useEffect(() => {\n    reviewsApi.getReviews().then(response => setReviws(response.data));\n  }, []);\n\n  useEffect(() => {\n    const data = defaultReviews.concat(reviws);\n    setReviwsData(data);\n  }, [defaultReviews, reviws]);\n\n  const currentElement = reviwsData.filter(elem => String(elem.id) === id);\n\n  return (\n    <Container>\n      <CardGroup className=\"pt-4 \">\n        <Row as={'ul'} className=\"my-0 mx-auto\">\n          {currentElement &&\n            currentElement?.map(elem => <Review key={elem.id} {...elem} />)}\n        </Row>\n      </CardGroup>\n    </Container>\n  );\n};\n\nexport default ReviewItemPage;\n","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('card-group');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nexport default Container;"],"names":["reviews","id","userName","date","comment","rating","email","phone","isSavedUsername","useParams","_useState","useState","_useState2","_slicedToArray","defaultReviews","setDefaultReviews","_useState3","_useState4","reviws","setReviws","_useState5","_useState6","reviwsData","setReviwsData","useEffect","reviewsApi","getReviews","then","response","data","concat","currentElement","filter","elem","String","_jsx","Container","children","CardGroup","className","Row","as","map","Review","_objectSpread","createWithBsPrefix","React","_ref","ref","bsPrefix","_ref$fluid","fluid","_ref$as","Component","props","_objectWithoutProperties","_excluded","prefix","useBootstrapPrefix","suffix","classNames","displayName"],"sourceRoot":""}