{"version":3,"file":"static/js/LazyProductsPage.e9ff5ef1.chunk.js","mappings":"kOA+CA,UAtC2B,WACzB,IAAAA,GAAsCC,EAAAA,EAAAA,UAAsB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxDI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAUlC,OAJAI,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAYC,cAAcC,MAAK,SAAAC,GAAQ,OAAIL,EAAeK,EAASC,KAAK,GAC1E,GAAG,KAGDC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,UAAU,OAAMC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,6BAA4BC,SAAC,iDAG1CC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mCAAkCC,SAAC,uBACjDC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,GAAI,KAAKH,SACA,OAAXX,QAAW,IAAXA,OAAW,EAAXA,EAAae,KAAI,SAAAC,GAAO,OACvBJ,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAEFC,GAAI,GACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJP,GAAI,KACJJ,UAAU,OAAMC,UAEhBC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAE,GAAAC,OAAKC,EAAAA,EAAOC,SAAQ,KAAAF,OAAIR,EAAQW,IAAKhB,UAC3CC,EAAAA,EAAAA,KAACgB,EAAAA,IAAWC,EAAAA,EAAAA,GAAA,GAAKb,OATdA,EAAQW,GAWT,QAKhB,C,sICzCMlB,EAAyBqB,EAAAA,YAAiB,SAAAC,EAO7CC,GAAQ,IANTC,EAAQF,EAARE,SAAQC,EAAAH,EACRI,MAAAA,OAAK,IAAAD,GAAQA,EAAAE,EAAAL,EAEbjB,GAAIuB,OAAS,IAAAD,EAAG,MAAKA,EACrB1B,EAASqB,EAATrB,UACG4B,GAAKC,EAAAA,EAAAA,GAAAR,EAAAS,GAEFC,GAASC,EAAAA,EAAAA,IAAmBT,EAAU,aACtCU,EAA0B,kBAAVR,EAAqB,IAAHX,OAAOW,GAAU,SACzD,OAAoBvB,EAAAA,EAAAA,KAAKyB,GAASR,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAChCG,IAAKA,GACFM,GAAK,IACR5B,UAAWkC,IAAWlC,EAAWyB,EAAQ,GAAHX,OAAMiB,GAAMjB,OAAGmB,GAAWF,KAEpE,IACAhC,EAAUoC,YAAc,YACxB,K","sources":["pages/Products/Products.tsx","../node_modules/react-bootstrap/esm/Container.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { ProductList } from '@helpers/index';\n// import { products } from '../../mock-tool/products';\nimport { ProductCard } from '../../components/index';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { productsApi } from 'api/api';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes/routes';\n\nconst Products: React.FC = () => {\n  const [productList, setProductList] = useState<ProductList>([]);\n\n  // useEffect(() => {\n  //   setProductList(products);\n  // }, []);\n\n  useEffect(() => {\n    productsApi.getProducts().then(response => setProductList(response.data));\n  }, []);\n\n  return (\n    <Container className=\"mt-4\">\n      <p className=\"text-center text-uppercase\">\n        the innovation leader in luxury vinyl plank\n      </p>\n      <h1 className=\"text-center text-capitalize mb-4\">let's get started</h1>\n      <Row as={'ul'}>\n        {productList?.map(product => (\n          <Col\n            key={product.id}\n            xs={12}\n            sm={6}\n            md={3}\n            lg={3}\n            as={'li'}\n            className=\"mb-4\"\n          >\n            <Link to={`${routes.products}/${product.id}`}>\n              <ProductCard {...product} />\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </Container>\n  );\n};\n\nexport default Products;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nexport default Container;"],"names":["_useState","useState","_useState2","_slicedToArray","productList","setProductList","useEffect","productsApi","getProducts","then","response","data","_jsxs","Container","className","children","_jsx","Row","as","map","product","Col","xs","sm","md","lg","Link","to","concat","routes","products","id","ProductCard","_objectSpread","React","_ref","ref","bsPrefix","_ref$fluid","fluid","_ref$as","Component","props","_objectWithoutProperties","_excluded","prefix","useBootstrapPrefix","suffix","classNames","displayName"],"sourceRoot":""}